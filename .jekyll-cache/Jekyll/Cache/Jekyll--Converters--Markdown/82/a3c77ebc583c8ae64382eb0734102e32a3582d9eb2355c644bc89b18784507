I"<p><strong>MariaDB</strong>默认情况下会使用当前系统的so库文件依赖，由于系统不一致，有可能会导致编译的安装包无法复用,在<strong>CPU架构</strong>一致的情况下，启动<strong>MariaDB</strong>,提示依赖的<strong>so文件</strong>,不存在，导致 <strong>MariaDB</strong>启动不了</p>

<h2 id="解决办法">解决办法</h2>

<p>修改<strong>MariaDB</strong> 编译文件,加入以下函数，设置<strong>MariaDB</strong>加载的路径，然后重新编译即可</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SET<span class="o">(</span>CMAKE_BUILD_WITH_INSTALL_RPATH TRUE<span class="o">)</span>
SET<span class="o">(</span>CMAKE_INSTALL_RPATH <span class="s2">"</span><span class="se">\$</span><span class="s2">{ORIGIN}/../lib-ext"</span><span class="o">)</span>
</code></pre></div></div>

<p><img src="https://i.opsta.cn/mariadb/mariadb-20201111162401394.png" alt="mariadb-20201111162401394" /></p>

<p>默认情况下，<strong>MariaDB</strong> 加载的是系统的<strong>so</strong></p>

<p><img src="https://i.opsta.cn/mariadb/Mariadb_2020-11-10_14-15-55.png" alt="Mariadb_2020-11-10_14-15-55" /></p>

<p>当<strong>lib-ext</strong>目录下放置<strong>so</strong>文件之后，他会去<strong>lib-ext</strong>目录下加载相关<strong>so</strong>，这样就有效的解决了缺<strong>so</strong>的问题了</p>

<p><img src="https://i.opsta.cn/mariadb/Mariadb_2020-11-10_14-15-56.png" alt="Mariadb_2020-11-10_14-15-55" /></p>

<p><strong>rpmbuild</strong> 打包过程中可能会出现检查<strong>so</strong>路径的问题，将校验的配置注释即可</p>

<p><img src="https://i.opsta.cn/mariadb/mariadb_2020-11-11_16-36-50.png" alt="mariadb_2020-11-11_16-36-50" /></p>
:ET